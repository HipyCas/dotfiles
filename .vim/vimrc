" SOURCES:
" https://dougblack.io/words/a-good-vimrc.html
"
" SEE:
" https://github.com/preservim/nerdtree/issues/433

" Change leader
let mapleader=","

" Miscellaneous/Util remaps
" remap insert mode exit from ESC to jk
inoremap jk <ESC>
" highlight last inserted text
nnoremap gV `[v`]
" toggle gundo
nnoremap <leader>u :GundoToggle<CR>
" save session
nnoremap <leader>ss :mksession<CR>
" remap redo to R
nnoremap R <C-r>
" remap R back to control-r, to access replace mode
nnoremap <C-r> R
" edit vimrc/bashrc, load vimrc bindings and soucre bashrc
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>eb :vsp $MYBASHRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
nnoremap <leader>sb :!source $MYBASHRC<CR>

" Movement remaps
" move to the beginning/end of the line
nnoremap B ^
nnoremap E $
" remap old ones to no action
nnoremap ^ <nop>
nnoremap $ <nop>

" Miscellaneous
set noswapfile     " don't use swap file
set spell "en_CA"

" Search
set hlsearch	     " highlight all search results
set ignorecase	   " ignore case when searching
set incsearch	     " show search matches as you type them
" hide search results (they don't hide when finished by default)
nnoremap <leader><space> :nohlsearch<CR>

" Indentation
set autoindent	   " auto-indent code
set expandtab	     " expand tabs into spaces
set tabstop=2	     " set tabs to be 2 spaces
set softtabstop=2  " delete 2 spaces when pressing back at beginning

" Folding & Brackets
set foldenable     " enable folding
set showmatch      " highlight matching []{}() when hovering over

" Interface
set number         " show line number
set wildmenu       " visual autocomplete for command menu
set lazyredraw     " redraw screen only when needed (redraws too often by default)

" enable backup to tmp folders
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" Custom functions
" toggle between number and relativenumber
function! ToggleNumber()
    if(&relativenumber == 1)
        set norelativenumber
        set number
    else
        set relativenumber
    endif
endfunc
" key map for function
" nnoremap <leader>t ToggleNumbers()

" Auto-load vim-plug if not loaded/created
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" vim-plug plugins
call plug#begin('~/.vim/plugged')
Plug 'embark-theme/vim', { 'as': 'embark' } " embark color scheme
Plug 'wakatime/vim-wakatime'
Plug 'sjl/gundo.vim' " plugin for inspecting undo tree IT IS REQUIRING ME TO HAVE VIM COMPILED WITH PYTHON 2.4 OR SOMETHING LIKE THAT, CANNOT USE
Plug 'ryanoasis/vim-devicons' " icons for the file explorer
Plug 'vim-airline/vim-airline' " nicer looking status bar
Plug 'editorconfig/editorconfig-vim' " editor-config support
Plug 'ap/vim-css-color' " color highlight CSS colors
Plug 'tpope/vim-fugitive' " git wrapper for vim (:Gblame for line blame, :G for status, etc.)
Plug 'airblade/vim-gitgutter' " include git indications next to lines
call plug#end()

" Color scheme
set termguicolors
colorscheme embark
syntax enable
let g:airline_theme = 'embark' " set status bar theme to same theme

" editorconfig-vim settings + exceptions
au FileType gitcommit let b:EditorConfig_disable = 1

